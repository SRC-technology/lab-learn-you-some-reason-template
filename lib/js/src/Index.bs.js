// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var ReactDOMRe = require("reason-react/lib/js/src/ReactDOMRe.js");

var Task = /* module */[];

var initial_state_001 = /* tasks : :: */[
  /* record */[
    /* id */Date.now(),
    /* label */"Learn Reason",
    /* status : Pending */0
  ],
  /* [] */0
];

var initial_state = /* record */[
  /* input */undefined,
  initial_state_001
];

var State = /* module */[/* initial_state */initial_state];

function reducer(state, action) {
  if (typeof action === "number") {
    var match = state[/* input */0];
    if (match !== undefined) {
      return /* record */[
              /* input */undefined,
              /* tasks : :: */[
                /* record */[
                  /* id */Date.now(),
                  /* label */match,
                  /* status : Pending */0
                ],
                state[/* tasks */1]
              ]
            ];
    } else {
      return state;
    }
  } else if (action.tag) {
    var id = action[0];
    var new_tasks = List.map((function (task) {
            var match = id === task[/* id */0];
            if (match) {
              return /* record */[
                      /* id */task[/* id */0],
                      /* label */task[/* label */1],
                      /* status : Done */1
                    ];
            } else {
              return task;
            }
          }), state[/* tasks */1]);
    return /* record */[
            /* input */state[/* input */0],
            /* tasks */new_tasks
          ];
  } else {
    var text = action[0];
    if (text === "") {
      return /* record */[
              /* input */undefined,
              /* tasks */state[/* tasks */1]
            ];
    } else {
      return /* record */[
              /* input */text,
              /* tasks */state[/* tasks */1]
            ];
    }
  }
}

var App = /* module */[
  /* Task */Task,
  /* State */State,
  /* reducer */reducer
];

function Index$Component$Task(Props) {
  var task = Props.task;
  return React.createElement("li", undefined, React.createElement("span", undefined, task[/* label */1]), React.createElement("button", undefined, "done"));
}

var Task$1 = /* module */[/* make */Index$Component$Task];

function Index$Component$App(Props) {
  var state = Props.state;
  return React.createElement("div", undefined, React.createElement("input", undefined), React.createElement("button", undefined, "add"), React.createElement("ul", undefined, $$Array.of_list(List.map((function (task) {
                            return React.createElement(Index$Component$Task, {
                                        task: task
                                      });
                          }), state[/* tasks */1]))));
}

var App$1 = /* module */[/* make */Index$Component$App];

var Component = /* module */[
  /* Task */Task$1,
  /* App */App$1
];

ReactDOMRe.renderToElementWithId(React.createElement(Index$Component$App, {
          state: initial_state
        }), "app");

var state = initial_state;

exports.App = App;
exports.Component = Component;
exports.state = state;
/* initial_state Not a pure module */
